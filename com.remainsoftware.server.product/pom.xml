<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.remainsoftware.server.parent</groupId>
    <artifactId>com.remainsoftware.server.parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <relativePath>../com.remainsoftware.server.parent</relativePath>
  </parent>
  <groupId>com.remainsoftware.server.parent</groupId>
  <artifactId>com.remainsoftware.server.product</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>eclipse-repository</packaging>
  
  	<properties>
		<tycho-version>0.18.1</tycho-version>
		<target.os>win32</target.os>
		<target.ws>win32</target.ws>
		<target.arch>x86_64</target.arch>
		<target.platform.path>${target.os}/${target.ws}/${target.arch}</target.platform.path>
		<product.finalName>server</product.finalName>
		<product.id>com.remainsoftware.server.product</product.id>
		<product.outputDirectory>${project.build.directory}/products/${product.id}/${target.platform.path}</product.outputDirectory>
		<!-- web-inf directory corresponds to the <rootFolder> definition of the 
			tycho configuration -->
		<product.web-inf.directory>${product.outputDirectory}/WEB-INF/</product.web-inf.directory>
		<!-- root_files not as project resources as this did not resolve properly 
			(all resources copied to WEB-INF) -->
		<project.rootfiles.directory>${project.basedir}/root_files/</project.rootfiles.directory>
		<rootfiles.wm.directory>${project.rootfiles.directory}/wm</rootfiles.wm.directory>
		<dart.project.deploy.directory>com.remainsoftware.server.product/deploy</dart.project.deploy.directory>
	</properties>
  

	<pluginRepositories>
		<pluginRepository>
			<id>atlassian-plugins</id>
			<url>http://maven.atlassian.com/repository/public/</url>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>target-platform-configuration</artifactId>
				<version>${tycho-version}</version>
				<configuration>
					<environments>
						<environment>
							<os>${target.os}</os>
							<ws>${target.ws}</ws>
							<arch>${target.arch}</arch>
						</environment>
					</environments>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-director-plugin</artifactId>
				<version>${tycho-version}</version>
				<executions>
					<execution>
						<id>materialize-products</id>
						<goals>
							<goal>materialize-products</goal>
						</goals>
					</execution>
					<execution>
						<id>archive-products</id>
						<goals>
							<goal>archive-products</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<products>
						<product>
							<!-- id = UID to be located in ws\target\products\?.?.?.product directory 
								and the required ?.product file will contain an uid=.. -->
							<id>${product.id}</id>
							<archiveFileName>${product.finalName}</archiveFileName>
							<rootFolder>WEB-INF</rootFolder>
						</product>
					</products>
				</configuration>
			</plugin>

			<!-- update the -console parameter in the web.xml -->
			<!-- add http://maven.atlassian.com/repository/public in pluginRepositories 
				<plugin> <artifactId>maven-antrun-plugin</artifactId> <version>1.7</version> 
				<dependencies> <dependency> <groupId>com.oopsconsultancy</groupId> <artifactId>xmltask</artifactId> 
				<version>1.16</version> </dependency> </dependencies> <executions> <execution> 
				<phase>package</phase> <configuration> <target> <echo message="Updating generated 
				default web.xml" /> <taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" 
				classpathref="maven.plugin.classpath" /> <xmltask source="${product.web-inf.directory}/web.xml" 
				dest="${product.web-inf.directory}/web.xml" preserveType="true"> <regexp 
				path="/web-app/servlet/init-param/param-value/text()" pattern="-console" 
				replace="-console 45051" /> </xmltask> </target> </configuration> </execution> 
				</executions> </plugin> -->

			<!-- Remove javax.servlet et al from the bundles.info -->
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.2</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<file>${product.web-inf.directory}/configuration/org.eclipse.equinox.simpleconfigurator/bundles.info</file>
					<token>javax\.servlet.*false|org\.hamcrest.*false|org\.junit.*false</token>
					<regexFlags>
						<regexFlag>CASE_INSENSITIVE</regexFlag>
						<!-- <regexFlag>UNIX_LINES</regexFlag> -->
					</regexFlags>
					<!-- in case the simpleConfigurator bundle is not included in the build -->
					<ignoreMissingFile>true</ignoreMissingFile>
				</configuration>
			</plugin>

			<!-- copy over resources we want in the war -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<mkdir dir="${rootfiles.wm.directory}" />
								<echo>remove existing wm web resources before copying new
									resources;
									dir=${rootfiles.wm.directory}</echo>
								<delete>
									<fileset dir="${rootfiles.wm.directory}">
									</fileset>
								</delete>
								<echo>copying web generated (dart) resources;
									dir=../${dart.project.deploy.directory},
									todir=${rootfiles.wm.directory}</echo>
								<mkdir dir="${rootfiles.wm.directory}" />
								<copy overwrite="true" failonerror="true"
									todir="${rootfiles.wm.directory}">
									<fileset
										dir="${project.basedir}/../${dart.project.deploy.directory}"
										includes="**/*" />
								</copy>
								<echo>copying all web resources;
									dir=${project.basedir}/root_files,
									todir=${product.outputDirectory}</echo>
								<copy overwrite="true" todir="${product.outputDirectory}">
									<fileset dir="${project.rootfiles.directory}" includes="**/*" />
								</copy>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- <plugin> <artifactId>maven-resources-plugin</artifactId> <version>2.5</version> 
				<executions> <execution> <phase>package</phase> <goals> <goal>copy-resources</goal> 
				</goals> <configuration> <resources> <resource> <directory>${project.build.directory}/../resources/root_files</directory> 
				<filtering>false</filtering> <includes> <include>*/**</include> </includes> 
				</resource> </resources> <outputDirectory>${product.outputDirectory}</outputDirectory> 
				<overwrite>true</overwrite> </configuration> </execution> </executions> </plugin> -->

			<!-- Configure the assembly plugin to build the final server war file -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>assembly.xml</descriptor>
					</descriptors>
					<finalName>${product.finalName}</finalName>
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
<!-- 	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>com.remainsoftware.gravity.restlet.redirector</artifactId>
			<version>1.0.0</version>
			<type>eclipse-plugin</type>
		</dependency>
		need log4j, restlet.redirector has dependency ! keep log4j at level 
			1.2.16 or will fail dependency jms/jxm
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>
	</dependencies> -->
</project>
